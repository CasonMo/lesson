<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">
    <context:component-scan base-package="com.mo">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <!--spring整合mybatis框架-->
    <!--配置数据源信息-->
    <!-- 数据源配置信息 -->
    <!--<context:property-placeholder location="classpath:jdbcConfig.properties"/>-->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbcConfig.properties" />
    </bean>
    <!--配置连接池-->
    <bean id="comboPooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 指定连接数据库的驱动-->
        <property name="driverClass" value="${jdbc.driver}"/>
        <!-- 指定连接数据库的URL-->
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <!-- 指定连接数据库的用户名-->
        <property name="user" value="${jdbc.username}"/>
        <!-- 指定连接数据库的密码-->
        <property name="password" value="${jdbc.password}"/>
        <!--&lt;!&ndash; 指定连接池中保留的最大连接数. Default:15&ndash;&gt;-->
        <!--<property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>-->
        <!--&lt;!&ndash; 指定连接池中保留的最小连接数&ndash;&gt;-->
        <!--<property name="minPoolSize" value="${jdbc.minPoolSize}"/>-->
        <!--&lt;!&ndash; 指定连接池的初始化连接数  取值应在minPoolSize 与 maxPoolSize 之间.Default:3&ndash;&gt;-->
        <!--<property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>-->
        <!--&lt;!&ndash; 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。 Default:0&ndash;&gt;-->
        <!--<property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>-->
        <!--&lt;!&ndash; 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数. Default:3&ndash;&gt;-->
        <!--<property name="acquireIncrement" value="${jdbc.acquireIncrement}"/>-->
        <!--&lt;!&ndash; JDBC的标准,用以控制数据源内加载的PreparedStatements数量。  -->
        <!--但由于预缓存的statements属于单个connection而不是整个连接池所以设置这个参数需要考虑到多方面的因数.如果maxStatements与maxStatementsPerConnection均为0,则缓存被关闭。Default:0&ndash;&gt;-->
        <!--<property name="maxStatements" value="${jdbc.maxStatements}"/>-->
        <!--&lt;!&ndash; 每60秒检查所有连接池中的空闲连接.Default:0 &ndash;&gt;-->
        <!--<property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"/>-->
    </bean>
    <!--配置SqlSessionFactory工厂-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="comboPooledDataSource" />
    </bean>
    <!--配置接口所在的包-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.mo.dao" />
    </bean>


    <!--配置spring框架声明式事务管理-->

    <!--配置事务管理器-->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="comboPooledDataSource" />
    </bean>

    <!--配置事务通知-->
    <tx:advice id="txAdvice" transaction-manager="dataSourceTransactionManager">
        <tx:attributes>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="*" isolation="DEFAULT"/>
        </tx:attributes>
    </tx:advice>
    <!--配置aop增强-->
    <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.mo.service.impl.*ServiceImpl.*(..))" />
    </aop:config>



</beans>